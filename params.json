{
  "name": "Recommendation Engine",
  "tagline": "Version 1.0.0",
  "body": "RecommendationEngine (A Java Framework for Recommender Systems)\r\n-------------\r\n\r\n[![Build Status](https://travis-ci.org/fmoghaddam/RecommendationEngine.svg?branch=master)](https://travis-ci.org/fmoghaddam/RecommendationEngine)\r\n\r\n**RecommendationEngine** is a Java framework for recommender systems (Java version 1.8 or higher required). This framework is Cross-Platform, Open Source , Extensible and Easy to Use. It not only implements state-of-art algorithms but only makes it possible for others to extend it and implement more user-specific algorithms. This framework developed to be used across with [Mise-en-scène Project](http://recsys.deib.polimi.it/?page_id=246).\r\n\r\n**Implemented Algorithms:**\r\n\r\n - ItemBased KNN \r\n - Average Popularity \r\n - Factorization Machine \r\n - FunkSVD\r\n  \r\n**Implemented Metrics:**\r\n\r\n - MAE\r\n - RMSE\r\n - Coverage \r\n - Precision\r\n - Recall\r\n - NDCG\r\n  \r\n**Implemeted Features:**\r\n\r\n - Low Level Features (Related to [Mise-en-scène\r\n   Project](http://recsys.deib.polimi.it/?page_id=246)) \r\n - Genre \r\n - Tag\r\n - Rating (Collaborative Filtering)\r\n\r\n**Running inside Eclipse**\r\n\r\nThis project is based on [Gradle](https://gradle.org/). So it could be easily imported to Eclipse. For importing it the Eclipse should contain [Buildship Plugin](https://projects.eclipse.org/projects/tools.buildship).  After installing [Buildship Plugin](https://projects.eclipse.org/projects/tools.buildship), you can easily import the project into the Eclipse as a Gradle project.\r\n\r\n**Running in Terminal**\r\n\r\nFor running the project, you only need to modify `config.properties` in `build/install/RecommendationEngine/bin` and then run `build/install/RecommendationEngine/bin/RecommendationEngine.bat` or `build/install/RecommendationEngine/bin/RecommendationEngine.sh`.\r\n\r\n**Code structure** \r\n\r\nPublic interfaces:\r\n\r\n - `Recommender.java` : All the algorithms should implement this\r\n   interface\r\n - `AccuracyEvaluation.java` : All the rating prediction metrics (RMSE, MAE, ...) should implement this interface\r\n - `ListEvaluation.java` : All the list generators metrics (Precision, Recall, ...) should implement this interface\r\n\r\n**Configuration**\r\n\r\nAll user needs to do is changing `config.properties` and then executing the code.\r\n```\r\n#######DATA#############\r\n#If your data has some meta data, please add '#' at the beginning.\r\n#All the lines with \"#\" will be ignored\r\n\r\n#Path to rating file\r\nRATING_FILE_PATH=data/Ratings.csv\r\n\r\n#Separator for rating file. \r\n#Tab=\\t\r\n#Semicolon=;\r\n#Comma=,\r\n\r\n#RATING_FILE_SEPARATOR=\\t\r\nRATING_FILE_SEPARATOR=,\r\n\r\n#Path to low level file\r\n#Leave it empty if there is no low level feature file\r\n#LOW_LEVEL_FILE_PATH=\r\nLOW_LEVEL_FILE_PATH=data/LLVisualFeatures13K_QuantileLog.csv\r\n#Separator for low level file\r\nLOW_LEVEL_FILE_SEPARATOR=,\r\n\r\n#Path to genre file\r\n#Set empty if there is no genre file\r\nGENRE_FILE_PATH=data/Genre.csv\r\n#Separator for genre file\r\nGENRE_FILE_SEPARATOR=,\r\n\r\n#Path to tag file\r\n#Set empty if there is no tag file\r\nTAG_FILE_PATH=data/Tag.csv\r\n#Separator for tag file\r\nTAG_FILE_SEPARATOR=,\r\n\r\n#######GENRERAL CONFIGURATION#########\r\n\r\n#SIMILARITY_FUNCTION\r\n#possible values: cosine,pearson\r\nSIMILARITY_FUNCTION=cosine\r\n\r\n#Number of folds used in cross validation\r\nNUMBER_OF_FOLDS=5\r\n\r\n#Number of neighbors used in KNN\r\nNUMBER_OF_NEAREST_NEIGHBOUR=10\r\n\r\n#Number of items will be returned in list recommendation\r\nTOP_N=10\r\n\r\n#######ALGORITHMS#############\r\n\r\n#Number of features used in FactorizationMachine\r\nNUMBER_OF_FEATURES_FOR_FM=10\r\n#Number of iterations used in FactorizationMachine learning\r\nNUMBER_OF_ITERATION_FOR_FM=200\r\n#Learning rate used in FactorizationMachine learning\r\nLEARNING_RATE_FOR_FM=0.001\r\n\r\n#Number of features used in FunkSVD\r\nNUMBER_OF_FEATURES_FOR_FUNKSVD=50\r\n#Number of iterations used in FunkSVD\r\nNUMBER_OF_ITERATION_FOR_FUNKSVD=50\r\n#Learning rate used in FunkSVD\r\nLEARNING_RATE_FOR_FUNKSVD=0.005\r\n\r\n#######Evaluation metrics#######\r\n#Possible values: MAE,RMSE,PredictionCoverage,NDCG,Precision,Recall\r\n#Can have multiple value (comma separated)\r\nMETRICS=MAE,RMSE,PredictionCoverage,NDCG,Precision,Recall\r\n\r\n#############RUN CONFIGURATION##################\r\n#Algorithm\r\n#Possible values: ItemBasedNN,FactorizationMachine,AveragePopularity,FunkSVD,HybridTagLowLevel\r\n\r\nNUMBER_OF_CONFIGURATION=2\r\n\r\nALGORITHM_1_NAME=FactorizationMachine\r\nALGORITHM_1_USE_LOW_LEVEL=false\r\nALGORITHM_1_USE_GENRE=false\r\nALGORITHM_1_USE_TAG=false\r\nALGORITHM_1_USE_RATING=true\r\n\r\nALGORITHM_2_NAME=ItemBasedNN\r\nALGORITHM_2_USE_LOW_LEVEL=true\r\nALGORITHM_2_USE_GENRE=false\r\nALGORITHM_2_USE_TAG=false\r\nALGORITHM_2_USE_RATING=false\r\n\r\nALGORITHM_X_NAME=ItemBasedNN\r\nALGORITHM_X_USE_LOW_LEVEL=true\r\nALGORITHM_X_USE_GENRE=false\r\nALGORITHM_X_USE_TAG=false\r\nALGORITHM_X_USE_RATING=false\r\n```\r\n\r\n**Sample result:**\r\n\r\nAll the experiments have been done over data in `data` folder.\r\n\r\nRating:\r\n\r\n| Algorithm | RMSE | MAE | Coverage | Precision | Recall | NDCG |\r\n| ------- | ------- | ------- | ------- | ------- | ------- | ------- |\r\n| ItemBasedKNN | 0.75198567 |  0.5812379 |  0.9809702 | 0.88165295 | 0.46150175 | 0.85933286 | \r\n| Average Popularity    | 0.87274086 | 0.7008808 | 0.9817214 | 0.9297659  | 0.16849223 | 0.8572529 |\r\n| Factorization Machine | 1.0924361 | 0.847448 | 0.9811511 | 0.7052688 | 0.40766105 | 0.7255255 |\r\n\r\nLow Level features:\r\n\r\n| Algorithm | RMSE | MAE | Coverage | Precision | Recall | NDCG |\r\n| ------- | ------- | ------- | ------- | ------- | ------- | ------- |\r\n| ItemBasedKNN | 0.75276524 |  0.5802754 |  0.98175746 | 0.90045756 | 0.50048786 | 0.861112 | \r\n| Factorization Machine | 1.2744157 | 1.0030644 | 0.98076487 | 0.71231234 | 0.48030663 | 0.7239859 |\r\n\r\nGenre:\r\n\r\n| Algorithm | RMSE | MAE | Coverage | Precision | Recall | NDCG |\r\n| ------- | ------- | ------- | ------- | ------- | ------- | ------- |\r\n| ItemBasedKNN | 0.7796999 |  0.6023326 |  0.8747948 | 0.9150926 | 0.46745244 | 0.845462 | \r\n| Factorization Machine | 1.1264656 | 0.8723874 | 0.98105305 | 0.7536468 | 0.5395745 | 0.75031984 |\r\n\r\nLow Level + Genre:\r\n\r\n| Algorithm | RMSE | MAE | Coverage | Precision | Recall | NDCG |\r\n| ------- | ------- | ------- | ------- | ------- | ------- | ------- |\r\n| ItemBasedKNN | 0.7572874 |  0.5857588 |  0.982289 |0.89470136 | 0.47212344 | 0.85523474 | \r\n| Factorization Machine | 1.2027843 | 0.9487314 | 0.9805652 | 0.74588954 | 0.4479124 | 0.7380162 |\r\n\r\nFAQ\r\n-------------\r\n\r\n### 1. How to run the project without importing it to Eclipse?\r\nAs this project is based on Gradle, it can be simply run. If you want to run it without changing any java code, then just do the following steps:\r\n* Download the repository\r\n* In `cmd` or `terminal` go to `build/install/RecommendationEngine/bin`\r\n* Change `config.properties` and modify it based on your use case\r\n* Run `RecommendationEngine.bat` or `RecommendationEngine.sh`\r\n\r\n### 2. I want to change the java code and run the project without importing it into Eclipse, How can I do that?\r\nYou can open any of the java classes in your favorite editor such as `notepad` and change the code. Then you can build and run the code with the following steps:\r\n* In `cmd` or `terminal` go to the root folder of the project\r\n* Run `gradlew.bat build` or `gradlew.sh build`\r\n\r\nIn case of any compilation error, you will see the proper error message. If you see `BUILD SUCCESSFUL` you can continue.\r\n\r\n* Run `gradlew.bat installApp` or `gradlew.sh installApp`\r\n\r\nIf you see `BUILD SUCCESSFUL` then you can follow the steps which have been explained in Question 1.\r\n\r\n### 3. How to import project into Eclipse?\r\nFor importing project into Eclipse, you can use [Buildship Plugin](https://projects.eclipse.org/projects/tools.buildship). For installing this plugin do the following steps:\r\n\r\n* Open the Eclipse\r\n* From `Help` menu select `Eclipse MarketPlace`\r\n* Insert `buildship` into search bar and install `Buildship Gradle Integration`\r\n\r\nAfter installing and restarting the Eclipse, you should be able to import the project as a Gradle project.\r\n\r\n### 4. How to run the project inside the Eclipse?\r\nFor running the project inside the Eclipse you should import it first (Question 3). After importing, from `Gradle Tasks` tab you will be able to select different Gradle tasks. In the simplest scenario, just `build` and `run` task is needed.\r\n\r\n### 5. How to implement my own algorithm?\r\nIf you need to implement your specific algorithm you only need to create a class in `algorithms` package and extend `Recommender` interface. By doing this, your algorithm will be accessible from `config.properties` file. \r\n\r\n### 6. How to implement my own metric?\r\nIf you need to implement another metric, you only need to create a class in `metrics` package and extend one of the `AccuracyEvaluation` or `ListEvaluation` interfaces. By doing this, your metric will be accessible from `config.properties` file. Keep in mind that all the metrics should have `hashCode()` function and this function should return a static fixed number. Currently numbers in [1,6] range occupied. So you can use 7,8,.... You can have a look at the `hashCode()` function in MAE.\r\n\r\n### 7. I use this code for my research. Do I have to cite it?\r\nAs it is explained this project is binded to [Mise-en-scène Project](http://recsys.deib.polimi.it/?page_id=246). So if you use it in your research, you need to cite it as following:\r\n\r\n```\r\n@inproceedings{deldjoo2016combine,\r\n  title={How to Combine Visual Features with Tags to Improve the Movie Recommendation Accuracy},\r\n  author={Deldjoo, Yashar and Elahi, Mehdi and Cremonesi, Paolo},\r\n  booktitle={International Conference on Electronic Commerce and Web Technologies},\r\n  year={2016},\r\n  organization={Springer International Publishing}\r\n}\r\n```\r\n\r\n### 8. How I can obtain your dataset?\r\nLow level features which have been collected in [Mise-en-scène Project](http://recsys.deib.polimi.it/?page_id=246) can be downloaded from [this](https://www.researchgate.net/publication/305367841_Using_Visual_Features_and_Latent_Factors_for_Movie_Recommendation) link. If you need to have Tags, Genre and Ratings, you can use [MovieLens latest dataset](http://grouplens.org/datasets/movielens/latest/). For simplicity we have preproccesed corresponding Tags, Genre and Ratings data and put them in `data` folder.\r\n  ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}